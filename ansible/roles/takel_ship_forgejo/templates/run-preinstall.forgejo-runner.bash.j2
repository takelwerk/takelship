{{ takel_ship_scripts_shebang }}

echo Running {{ takel_ship_forgejo_runner_service['name'] }} preinstallation

PROJECT="$1"
RUNNERDIR="{{
takel_ship_compose_to_services_dir }}/{{
takel_ship_forgejo_runner_service['name'] }}/data"

# if the first runner is already configured then exit
if [ -w "$RUNNERDIR-1/.runner" ]; then
  echo First forgejo runner is already configured: skipping runner registration
  echo Remove {{
      takel_ship_compose_data_dir }}/{{
      takel_ship_compose_compose_dir }}/{{
      takel_ship_compose_services_dir }}/{{
      takel_ship_forgejo_runner_service['name']
      }}/data\* to force reregistration
  exit
fi

echo Registering forgejo runners

rm --force --recursive $RUNNERDIR*

{% for runner in range(1, takel_ship_forgejo_runner_service['instances'] + 1) %}
mkdir -p $RUNNERDIR-{{ runner }}
touch $RUNNERDIR-{{ runner }}/.runner
mkdir -p $RUNNERDIR-{{ runner }}/.cache
chmod 775 $RUNNERDIR-{{ runner }}/.runner
chmod 775 $RUNNERDIR-{{ runner }}/.cache
chmod g+s $RUNNERDIR-{{ runner }}/.runner
chmod g+s $RUNNERDIR-{{ runner }}/.cache
{% endfor %}

# compose runner up
{% for runner in range(1, takel_ship_forgejo_runner_service['instances'] + 1) %}
echo Starting forgejo runner {{ runner }} in register mode
TAKELSHIP_FORGEJO_RUNNER_COMMAND={{ takelship_forgejo_runner_command_register }} \
  compose-nonroot --profile podman \
  --file {{ takel_ship_compose_to_projects_dir }}/$PROJECT/{{ takel_ship_compose_docker_compose_yml }} \
  up {{ takel_ship_forgejo_runner_service['name'] }}-{{ runner }}-service -d 2> /dev/null

{% endfor %}

RETRY=1
# wait until the runner is up
until [ $RETRY -ge 20 ]; do
  podman exec -it {{ takel_ship_forgejo_runner_service['name'] }}-1 whoami && break
  echo Waiting for forgejo runners
  sleep 1
  let RETRY++
done

USER=$(podman exec -it {{ takel_ship_forgejo_runner_service['name'] }}-1 whoami)

# if the last command failed then exit
[ $? -ne 0 ] && exit

{% for runner in range(1, takel_ship_forgejo_runner_service['instances'] + 1) %}
echo Registering forgejo runner {{ runner }}

SECRET=$(xxd -u -l 20 -p /dev/urandom)

forgejo forgejo-cli actions register \
  --name {{ takel_ship_forgejo_runner_service['name'] }}-{{ runner }} \
  --labels ${TAKELSHIP_FORGEJO_RUNNER_LABELS:-{{ takelship_forgejo_runner_labels | join(',') }}} \
  --secret $SECRET

podman exec -it {{ takel_ship_forgejo_runner_service['name'] }}-{{ runner }} forgejo-runner create-runner-file \
  --name {{ takel_ship_forgejo_runner_service['name'] }}-{{ runner }} \
  --instance http://{{ takel_ship_forgejo_server_service['name'] }}:3000 \
  --secret $SECRET

{% endfor %}
# compose runner down
{% for runner in range(1, takel_ship_forgejo_runner_service['instances'] + 1) %}
echo Killing forgejo runner {{ runner }} in register mode
compose-nonroot --profile podman \
  --file {{ takel_ship_compose_to_projects_dir }}/$PROJECT/{{ takel_ship_compose_docker_compose_yml }} \
  kill {{ takel_ship_forgejo_runner_service['name'] }}-{{ runner }}-service 2> /dev/null

# add labels to runner config
sed -i -E s"|^  \"labels\".*$|  \"labels\": [{{ '\\\"' + takelship_forgejo_runner_labels | join('\\\", \\\"') + '\\\"'  }}]|" $RUNNERDIR-{{ runner }}/.runner

{% endfor %}
echo Starting forgejo runners in daemon mode
