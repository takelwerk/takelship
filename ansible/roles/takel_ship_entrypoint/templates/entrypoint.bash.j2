{{ takel_ship_scripts_shebang }}

POD={{ takel_ship_scripts_script_pod['name'] }}
LOG="{{ takel_ship_entrypoint_log_prefix }}"
SERVICES_DIR={{ takel_ship_compose_home_dir }}/{{ takel_ship_compose_data_dir }}/{{ takel_ship_compose_compose_dir }}/{{ takel_ship_compose_services_dir }}
PROJECTS_DIR={{ takel_ship_compose_home_dir }}/{{ takel_ship_compose_data_dir }}/{{ takel_ship_compose_compose_dir }}/{{ takel_ship_compose_projects_dir }}
PROJECTS_SETUP_DIR={{ takel_ship_compose_home_dir }}/{{ takel_ship_compose_dist_dir }}/{{ takel_ship_compose_projects_dir }}

function print_header {
  echo $LOG This is a takelwerk takelship container
  echo $LOG Image: {{ takelship['image'] }}
  echo $LOG Info: https://github.com/takelwerk/takelship
  echo $LOG CLI: https://github.com/takelwerk/takelage-cli
}

if [ -z "$1" ] || [[ "$1" == "/bin/bash" ]]; then
  print_header
  echo $LOG No project selected. Available projects:
  {{ takel_ship_scripts_script_first_aid['name'] }}
  exit
fi

PROJECT="$1"

[[ "$PROJECT" == "default" ]] &&
  PROJECT={{ takel_ship_compose_default_project }}

if [[ "$PROJECT" != "info" ]] &&
  [[ "$PROJECT" != "dump" ]] &&
{% for project in takel_ship_compose_projects %}
  [[ "$PROJECT" != {{ project['name'] }} ]] &&
{% endfor %}
  true; then
  echo $LOG There is no project: "$PROJECT"
  {{ takel_ship_scripts_script_first_aid['name'] }}
  exit
fi

if [[ "$PROJECT" == "info" ]]; then
  cat {{ takel_ship_compose_script_takelship_yml['path'] }}/{{
         takel_ship_compose_script_takelship_yml['name'] }}
  exit
fi

print_header
echo $LOG Preparing podman container environment

[[ "$DEBUG" == "true" ]] && echo Project: "$PROJECT"

DUMP="${TAKELSHIP_DUMP:-"false"}"
DUMP="${DUMP,,}"

UPDATE="${TAKELSHIP_UPDATE:-"false"}"
UPDATE="${UPDATE,,}"

[[ "$DUMP" == "true" ]] &&
  UPDATE='true'

[[ "$DEBUG" == "true" ]] &&
  echo Check if we have to prepopulate the data dir

[ ! -e "$PROJECTS_DIR" ] &&
  UPDATE="true"

[[ "$DEBUG" == "true" ]] &&
  echo Update: "$UPDATE"

echo $LOG Creating compose directories
mkdir --parents {{ takel_ship_compose_home_dir }}/{{ takel_ship_compose_data_dir }}/{{ takel_ship_registry_cache_dir }}
mkdir --parents $SERVICES_DIR
mkdir --parents $PROJECTS_DIR

if [[ "$UPDATE" == "true" ]]; then
  echo $LOG Setting localhost ports
  $PROJECTS_SETUP_DIR/$PROJECT/{{ takel_ship_compose_set_ports }}
  echo $LOG Updating data directory
  $PROJECTS_SETUP_DIR/$PROJECT/{{ takel_ship_compose_copy_project }}
fi

echo $LOG Changing podman uid and gid and chowning data dir
{{ takel_ship_entrypoint_script_change_ids['name'] }}

[[ "$DUMP" == "true" ]] &&
  exit

# From here on non-privileged containers will fail

echo $LOG Setting time zone
cp --force /usr/share/zoneinfo/${TAKELSHIP_TIMEZONE:-Europe/Amsterdam} /etc/localtime
cat ${TAKELSHIP_TIMEZONE:-Europe/Amsterdam} > /etc/timezone

[[ "$DEBUG" == "true" ]] && echo Suppressing warning message about shared mount
mount / --make-rshare

echo $LOG Creating podman unix socket and socat tcp forward
{{ takel_ship_dind_script_add_podman_socket['name'] }}

echo $LOG Exporting takelship environment variables
{{ takel_ship_entrypoint_script_export_envvars['name'] }} "$(env)"

# start internal takelship registry
echo $LOG Starting registry on localhost:{{ takel_ship_registry_takelship_registry_http_5555['port'] }}
$POD mkdir --parents {{ takel_ship_compose_data_dir }}/{{ takel_ship_registry_cache_dir }}
$POD --workdir $SERVICES_DIR/{{ takel_ship_registry_takelship_registry_service['name'] }} ./{{ takel_ship_compose_run_podman_up }}

echo $LOG Copying images for project: $PROJECT
$POD $PROJECTS_SETUP_DIR/$PROJECT/{{ takel_ship_compose_copy_images }}

echo $LOG Starting project: $PROJECT
$POD --workdir $PROJECTS_DIR/$PROJECT ./{{ takel_ship_compose_run_podman_up }}

echo $LOG Starting cron
cron &

echo $LOG Following podman logs
while true; do
  $POD $PROJECTS_SETUP_DIR/$PROJECT/{{ takel_ship_compose_podman_logs }}
done
