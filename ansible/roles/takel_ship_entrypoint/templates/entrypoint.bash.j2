{{ takel_ship_scripts_shebang }}

DEBUG=${TAKELSHIP_DEBUG:-"false"}
DEBUG=${DEBUG,,}
debug() {
  [[ "$DEBUG" == "true" ]] && echo $@
}

echo {{ takel_ship_entrypoint_log_prefix }} This is a takelwerk takelship container
echo {{ takel_ship_entrypoint_log_prefix }} It runs: {{ project['images']['project']['target_user'] }}/{{ project['images']['project']['target_repo'] }}:{{ project['version'] }}
echo {{ takel_ship_entrypoint_log_prefix }} See: https://github.com/takelwerk/takelship

if [ -z "$1" ] || [[ "$1" == "/bin/bash" ]]; then
  echo {{ takel_ship_entrypoint_log_prefix }} No project selected
  {{ takel_ship_scripts_script_first_aid['name'] }}
  exit
fi

PROJECT="$1"
debug project is set to $PROJECT

if [[ "$PROJECT" == "default" ]]; then
  PROJECT={{ takel_ship_compose_default_project }}
  debug project is set to: $PROJECT
fi

if true &&
{% for project in takel_ship_compose_projects %}
  [[ "$PROJECT" != {{ project['name'] }} ]] &&
{% endfor %}
  true; then
  echo {{ takel_ship_entrypoint_log_prefix }} There is no project: "$PROJECT"
  {{ takel_ship_scripts_script_first_aid['name'] }}
  exit
fi

echo {{ takel_ship_entrypoint_log_prefix }} Preparing podman container environment

debug export takelship environment variables
{{ takel_ship_entrypoint_script_export_envvars['name'] }} "$(env)"

debug make sure that the data dir exists
{{ takel_ship_scripts_script_cmd['name'] }} mkdir --parents {{ takel_ship_compose_data_dir }}

debug change podman uid and git and chown data dir
{{ takel_ship_entrypoint_script_change_ids['name'] }}

UPDATE="false"

debug check if we have to prepopulate the data dir
[ ! -e "{{takel_ship_compose_home_dir}}/{{ takel_ship_compose_data_dir }}/{{ takel_ship_compose_compose_dir }}" ] && UPDATE="true"

UPDATE=${TAKELSHIP_UPDATE:-$UPDATE}
UPDATE=${UPDATE,,}

if [ "$UPDATE" == "true" ]; then
  debug copy dist files to data volume
  {{ takel_ship_scripts_script_cmd['name'] }} cp --recursive /home/podman/dist/* /home/podman/data
fi

debug suppress warning message about shared mount
mount / --make-rshare

echo {{ takel_ship_entrypoint_log_prefix }} Starting podman compose project: "$PROJECT"
{{ takel_ship_scripts_script_cmd['name'] }} --workdir {{takel_ship_compose_home_dir}}/{{ takel_ship_compose_data_dir }}/{{ takel_ship_compose_compose_dir }} "./run.$PROJECT" & >/dev/null 2>&1

echo {{ takel_ship_entrypoint_log_prefix }} Boarding podman compose logs
while true; do {{ takel_ship_scripts_script_cmd['name'] }} --workdir {{takel_ship_compose_home_dir}}/{{ takel_ship_compose_data_dir }}/{{ takel_ship_compose_compose_dir }} podman compose --file "{{takel_ship_compose_home_dir}}/{{ takel_ship_compose_data_dir }}/{{ takel_ship_compose_compose_dir }}/{{ takel_ship_compose_service_filename}}-$PROJECT.yml" logs --follow 2>/dev/null; done
